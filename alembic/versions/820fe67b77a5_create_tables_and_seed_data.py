"""create tables and seed data

Revision ID: 820fe67b77a5
Revises: 
Create Date: 2024-05-09 14:35:14.969856

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '820fe67b77a5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    category_table = op.create_table('categories',
                                     sa.Column('id', sa.UUID(), server_default=sa.text(
                                         'gen_random_uuid()'), nullable=False),
                                     sa.Column('name', sa.String(),
                                               nullable=False),
                                     sa.Column('created_at', sa.TIMESTAMP(timezone=True),
                                               server_default=sa.text('now()'), nullable=False),
                                     sa.Column('updated_at', sa.TIMESTAMP(
                                         timezone=True), nullable=True),
                                     sa.PrimaryKeyConstraint('id'),
                                     sa.UniqueConstraint('name')
                                     )
    # ### seed categories
    op.bulk_insert(category_table, [{
        "name": "Cooking"
    }, {
        "name": "Coding"
    }, {
        "name": "Sports"
    }])

    role_table = op.create_table('roles',
                                 sa.Column('id', sa.UUID(), server_default=sa.text(
                                     'gen_random_uuid()'), nullable=False),
                                 sa.Column('name', sa.String(),
                                           nullable=False),
                                 sa.Column('created_at', sa.TIMESTAMP(timezone=True),
                                           server_default=sa.text('now()'), nullable=False),
                                 sa.Column('updated_at', sa.TIMESTAMP(
                                     timezone=True), nullable=True),
                                 sa.PrimaryKeyConstraint('id'),
                                 sa.UniqueConstraint('name')
                                 )
    # ### seed statuses
    op.bulk_insert(role_table, [{
        "name": "Admin"
    }, {
        "name": "User"
    }])

    status_table = op.create_table('statuses',
                                   sa.Column('id', sa.UUID(), server_default=sa.text(
                                       'gen_random_uuid()'), nullable=False),
                                   sa.Column('name', sa.String(),
                                             nullable=False),
                                   sa.Column('created_at', sa.TIMESTAMP(timezone=True),
                                             server_default=sa.text('now()'), nullable=False),
                                   sa.Column('updated_at', sa.TIMESTAMP(
                                       timezone=True), nullable=True),
                                   sa.PrimaryKeyConstraint('id'),
                                   sa.UniqueConstraint('name')
                                   )
    # ### seed statuses
    op.bulk_insert(status_table, [{
        "name": "New"
    }, {
        "name": "Completed"
    }, {
        "name": "Deleted"
    }, {
        "name": "Terminated"
    }, {
        "name": "Active"
    }, {
        "name": "Blocked"
    }, {
        "name": "Suspended"
    }])

    op.create_table('users',
                    sa.Column('id', sa.UUID(), server_default=sa.text(
                        'gen_random_uuid()'), nullable=False),
                    sa.Column('full_name', sa.String(), nullable=False),
                    sa.Column('phone', sa.String(), nullable=True),
                    sa.Column('email', sa.String(), nullable=False),
                    sa.Column('password', sa.LargeBinary(), nullable=False),
                    sa.Column('status_id', sa.UUID(), nullable=False),
                    sa.Column('role_id', sa.UUID(), nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(
                        timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
                    sa.ForeignKeyConstraint(['status_id'], ['statuses.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email')
                    )
    op.create_table('todos',
                    sa.Column('id', sa.UUID(), server_default=sa.text(
                        'gen_random_uuid()'), nullable=False),
                    sa.Column('title', sa.String(), nullable=False),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('category_id', sa.UUID(), nullable=False),
                    sa.Column('status_id', sa.UUID(), nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(
                        timezone=True), nullable=True),
                    sa.Column('owner_id', sa.UUID(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['category_id'], ['categories.id'], ),
                    sa.ForeignKeyConstraint(
                        ['owner_id'], ['users.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['status_id'], ['statuses.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('todos')
    op.drop_table('users')
    op.drop_table('statuses')
    op.drop_table('roles')
    op.drop_table('categories')
    # ### end Alembic commands ###
